name: CI Build App

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - "cmd/**"
      - "web/**"
      - ".github/workflows/**"
  pull_request:
    branches: [main]

env:
  VERSION: 0.8.3
  STORAGE_ACCT_NAME: benc
  BUILD_INFO: "Build:development / Workflow:${{ github.workflow }} / RunId:${{ github.run_id }} / Ref:${{ github.ref }} / SHA:${{ github.sha }} / ImageTag:${{ github.run_id }}"
  IMAGE_REG: ghcr.io
  IMAGE_TAG: ${{ github.run_id }}

jobs:
  # ===== Testing & code checking ======
  tests-linting:
    runs-on: ubuntu-latest
    outputs:
      imageTag: ${{ steps.createTag.outputs.IMAGE_TAG }}

    steps:
      - name: "Checkout source"
        uses: actions/checkout@v3

      - name: "Set Go version and paths"
        uses: actions/setup-go@v3
        with:
          go-version: "^1.19.0"

      - name: "Install extra tools"
        run: |
          go install gotest.tools/gotestsum@latest
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin

      - name: "Check code & lint"
        run: |
          go get ./...
          make lint

      - name: "Run all unit tests"
        run: make test-reports

      # Very optional - upload of test results
      - name: "Upload test reports to Azure"
        if: ${{ success() || failure() }}
        run: |
          az storage blob upload-batch --account-name $STORAGE_ACCT_NAME --account-key "${{ secrets.STORAGE_KEY }}" \
             --source ./output --destination \$web/${{ github.run_id }} --no-progress > /dev/null
          echo -e "üìúüåç Test reports uploaded and viewable here - https://$STORAGE_ACCT_NAME.z6.web.core.windows.net/${{ github.run_id }}/"

  # ===== Build container images ======
  build-images:
    runs-on: ubuntu-latest
    needs: tests-linting
    strategy:
      matrix:
        serviceName: [cart, orders, users, products, frontend]

    steps:
      - name: "Checkout source"
        uses: actions/checkout@v3

      - name: "Run build"
        run: |
          make docker-build-${{ matrix.serviceName }} IMAGE_TAG=$IMAGE_TAG VERSION=$VERSION BUILD_INFO="$BUILD_INFO"
          make docker-build-${{ matrix.serviceName }} IMAGE_TAG=latest VERSION=$VERSION BUILD_INFO="$BUILD_INFO"

      # Steps after this are only run when merging or pushing into main
      - name: "Push to container registry"
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login $IMAGE_REG -u $GITHUB_ACTOR --password-stdin
          make docker-push-${{ matrix.serviceName }} IMAGE_TAG=$IMAGE_TAG
          make docker-push-${{ matrix.serviceName }} IMAGE_TAG=latest

  # ===== Fire off the deployment workflow ======
  trigger-deployment:
    runs-on: ubuntu-latest
    needs: 
      - build-images
      - tests-linting
    steps:
      # Continuous deployment trigger
      - name: "Trigger deployment with workflows_dispatch"
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: Deploy To Kubernetes
          token: ${{ secrets.GH_PAT }}
          inputs: '{ "IMAGE_TAG": "${{ env.IMAGE_TAG }}" }'
