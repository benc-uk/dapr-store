{{- $tlsEnabled := (or .Values.ingress.certIssuer .Values.ingress.certName) -}}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Chart.Name }}-ingress-rules
  annotations:
    {{ if .Values.ingress.certIssuer }}
    cert-manager.io/cluster-issuer: {{ .Values.ingress.certIssuer }}
    {{ end }}    
    {{ if $tlsEnabled }}
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    {{ else }}
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    {{ end }}    
spec:
  ingressClassName: dapr
  {{ if $tlsEnabled }}
  tls:
  - hosts:
    - "{{ .Values.ingress.host }}"
    {{ if .Values.ingress.certName }}
    secretName: {{ .Values.ingress.certName }}
    {{ else }}
    secretName: {{ include "daprstore.fullname" . }}
    {{ end }}
  {{ end }}
  rules:
    {{ if .Values.ingress.host }}
    - host: "{{ .Values.ingress.host }}"
      http: 
    {{ else }}
    - http:
    {{ end }}
        paths:
          # This blocks calls to the private API from outside the cluster
          # It's kinda hacky (you get a 503 rather than 403), but it works
          - path: /v1.0/invoke/users/method/private
            pathType: Prefix
            backend:
              service:
                name: sink-hole # Non-existent service, for request to die
                port: 
                  number: 80             
          # Only expose the Dapr invoke API, lets us call our services and nothing more
          - path: /v1.0/invoke
            pathType: Prefix
            backend:
              service:
                name: api-gateway-dapr
                port: 
                  number: 80                
          # Everything else falls through to the frontend-host for serving the SPA         
          - path: /
            pathType: Prefix
            backend:
              service:
                name: daprstore-frontend-host
                port:
                  number: 8000